---
# tasks file for wm

- name: Cleanup Sway, Swaylock, Waybar, Font configs
  tags:
    - never
    - wm:cleanup
    - wm:configs:cleanup
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  loop:
    - "{{ wm_sway_dir }}"
    - "{{ wm_swaylock_dir }}"
    - "{{ wm_waybar_dir }}"
    - "{{ wm_fontconfig_dir }}"

- name: Deploy configs
  tags:
    - wm
    - wm:cleanup
    - wm:configs
    - wm:configs:cleanup
  block:
    - name: Ensure main directories structure exist
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "0755"
        state: "directory"
      loop:
        - "{{ wm_sway_dir }}"
        - "{{ wm_swaylock_dir }}"
        - "{{ wm_waybar_dir }}"
        - "{{ wm_fontconfig_dir }}"

    - name: Deploy SDDM config for autologin
      become: true
      when: wm_autologin
      ansible.builtin.lineinfile:
        path: /etc/sddm.conf
        insertafter: ^\[Autologin\]
        regexp: "{{ item.0 }}"
        line: "{{ item.1 }}"
        state: present
      loop:
        - ["^Relogin=", "Relogin=true"]
        - ["^User=", "User={{ wm_username }}"]

    - name: Ensure Sway directory structure exist
      ansible.builtin.file:
        path: "{{ wm_sway_dir }}/{{ item.path }}"
        mode: "0755"
        state: directory
      with_community.general.filetree:
        - sway/
        - ../templates/sway/
      when: item.state == "directory"

    - name: Deploy Sway settings files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ wm_sway_dir }}/{{ item.path }}"
        mode: "0644"
      with_community.general.filetree: sway/
      when: item.state == "file"
      notify: "reload sway config"

    - name: Deploy Sway settings templates
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ wm_sway_dir }}/{{ item.path | splitext | first }}"
        mode: "0644"
      with_community.general.filetree: ../templates/sway/
      when: item.state == "file"
      notify: "reload sway config"

    - name: Ensure Swaylock directory structure exist
      ansible.builtin.file:
        path: "{{ wm_swaylock_dir }}/{{ item.path }}"
        mode: "0755"
        state: directory
      with_community.general.filetree: ../templates/swaylock/
      when: item.state == "directory"

    - name: Deploy Swaylock settings templates
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ wm_swaylock_dir }}/{{ item.path | splitext | first }}"
        mode: "0644"
      with_community.general.filetree: ../templates/swaylock/
      when: item.state == "file"
      notify: "reload sway config"

    - name: Ensure Waybar directory structure exist
      ansible.builtin.file:
        path: "{{ wm_waybar_dir }}/{{ item.path }}"
        mode: "0755"
        state: directory
      with_community.general.filetree: waybar/
      when: item.state == "directory"

    - name: Deploy Waybar settings files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ wm_waybar_dir }}/{{ item.path }}"
        mode: "0644"
      with_community.general.filetree: waybar/
      when: item.state == "file"
      notify: "reload sway config"

    - name: Ensure Font config directory structure exist
      ansible.builtin.file:
        path: "{{ wm_fontconfig_dir }}/{{ item.path }}"
        mode: "0755"
        state: directory
      with_community.general.filetree: fontconfig/
      when: item.state == "directory"

    - name: Deploy Font config files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ wm_fontconfig_dir }}/{{ item.path }}"
        mode: "0644"
      with_community.general.filetree: fontconfig/
      when: item.state == "file"

- name: Deploy Nerd Fonts
  tags:
    - wm
    - wm:cleanup
    - wm:fonts
  block:
    - name: Ensure that fonts directory structure exist
      ansible.builtin.file:
        path: "{{ wm_fonts_dir }}"
        mode: "0700"
        state: directory

    - name: Ensure that fonts exist
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/latest/download/SourceCodePro.tar.xz
        dest: "{{ wm_fonts_dir }}"
        remote_src: true
        mode: "0700"
        exclude:
          - LICENSE.txt
          - README.md

- name: Deploy GTK+ settings
  tags:
    - wm
    - wm:cleanup
    - wm:gtk
  when: wm_dark_theme
  block:
    - name: Ensure GTK+ 3 settings exist
      ansible.builtin.lineinfile:
        path: "{{ wm_gtk3_config }}"
        line: "[Settings]"
        mode: "0644"
        create: true
        state: present

    - name: Enable dark theme for GTK+ 3
      ansible.builtin.lineinfile:
        path: "{{ wm_gtk3_config }}"
        insertafter: ^\[Settings\]
        regexp: ^gtk-application-prefer-dark-theme
        line: gtk-application-prefer-dark-theme = true
        state: present

    - name: Enable dark theme for GTK+ 4
      community.general.dconf:
        key: /org/gnome/desktop/interface/color-scheme
        value: "'prefer-dark'"
        state: present
